---
// El middleware ya maneja la autenticación
---

<div class="min-h-screen bg-tech-900 bg-gradient-to-b from-tech-900 via-tech-900/95 to-tech-900">
  <!-- Header -->
  <header class="bg-tech-800/30 backdrop-blur-sm border-b border-tech-700/30">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
      <div class="flex justify-between h-16">
        <div class="flex">
          <div class="flex-shrink-0 flex items-center">
            <a href="/admin" class="text-xl font-bold text-white hover:text-primary-400 transition-colors duration-200">Admin Panel</a>
          </div>
        </div>
        <div class="flex items-center">
          <button id="logoutBtn" class="group relative inline-flex items-center gap-2 px-4 py-2 bg-tech-800/50 text-white rounded-xl hover:bg-tech-700/50 transition-colors duration-200">
            <i class="fas fa-sign-out-alt"></i>
            <span>Cerrar Sesión</span>
          </button>
        </div>
      </div>
    </div>
  </header>

  <!-- Main Content -->
  <main class="max-w-7xl mx-auto py-6 sm:px-6 lg:px-8">
    <div id="admin-content">
      <slot />
    </div>
  </main>

  <!-- Toast Notification -->
  <div id="toast" class="fixed bottom-4 right-4 z-50 hidden">
    <div class="bg-tech-800/95 backdrop-blur-sm rounded-xl shadow-xl border border-tech-700/30 p-4 flex items-center space-x-4">
      <i id="toastIcon" class="fas text-2xl"></i>
      <p id="toastMessage" class="text-white"></p>
    </div>
  </div>
</div>

<script>
  const { logout } = await import('../utils/auth.js');
  const { safeDOM, safeRedirect, showToast, hideToast } = await import('../utils/browser.js');

  // Esperar a que el DOM esté listo
  document.addEventListener('DOMContentLoaded', () => {
    // Manejar logout
    const logoutBtn = safeDOM.getElementById('logoutBtn');
    if (logoutBtn) {
      safeDOM.addEventListener(logoutBtn, 'click', async () => {
        try {
          await logout();
          safeRedirect('/login');
        } catch (error) {
          console.error('Error en logout:', error);
          safeRedirect('/login');
        }
      });
    }

    // Exponer funciones globalmente
    if (typeof window !== 'undefined') {
      window.showToast = showToast;
      window.hideToast = hideToast;
    }
  });
</script>

<style is:global>
  /* Estilos para scrollbars */
  ::-webkit-scrollbar {
    width: 8px;
    height: 8px;
  }

  ::-webkit-scrollbar-track {
    background: rgba(15, 23, 42, 0.3);
  }

  ::-webkit-scrollbar-thumb {
    background: rgba(249, 115, 22, 0.3);
    border-radius: 4px;
  }

  ::-webkit-scrollbar-thumb:hover {
    background: rgba(249, 115, 22, 0.5);
  }

  /* Estilos para inputs y selects */
  input[type="text"],
  input[type="email"],
  input[type="password"],
  input[type="number"],
  input[type="url"],
  select,
  textarea {
    background: rgba(15, 23, 42, 0.5);
    border: 1px solid rgba(51, 65, 85, 0.5);
    color: white;
    border-radius: 0.75rem;
    padding: 0.75rem 1rem;
    width: 100%;
    transition: all 0.2s;
  }

  input:focus,
  select:focus,
  textarea:focus {
    outline: none;
    border-color: #f97316;
    box-shadow: 0 0 0 2px rgba(249, 115, 22, 0.2);
  }

  /* Estilos para placeholder */
  ::placeholder {
    color: rgba(148, 163, 184, 0.5);
  }

  /* Estilos para selección de texto */
  ::selection {
    background: rgba(249, 115, 22, 0.2);
    color: white;
  }
</style> 