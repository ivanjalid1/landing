---
import { Image } from 'astro:assets';
const fbImg = '/src/img/fb.jpg';
const igImg = '/src/img/ig.jpg';
const deliverySvg = '/src/img/advantages-delivery.svg';
const supportSvg = '/src/img/advantages-support.svg';
const secureSvg = '/src/img/advantages-secure.svg';

// Cargar contenido dinÃ¡micamente desde el backend
let heroContent = {
  title: "Your #1 agency for advertising assets & solutions!",
  subtitle: "We're proud to support your business and help you overcome obstacles from Facebook bans.",
  buttonText: "ðŸš€ Contact Direct",
  buttonLink: "#contact",
  paymentInfo: "Contact us to pay using VISA, Wise, Payoneer, Bank Transfer, IBAN",
  supportText: "Support"
};

try {
  const response = await fetch('http://localhost:5000/api/content/hero');
  if (response.ok) {
    const data = await response.json();
    if (data.success && data.data?.data) {
      heroContent = data.data.data;
    }
  }
} catch (error) {
  console.log('Error cargando contenido del hero:', error);
}
---

<section class="relative min-h-screen flex items-center justify-center bg-gradient-to-br from-slate-50 via-blue-50 to-cyan-50 overflow-hidden">
  <!-- Curva azul decorativa -->
  <div class="absolute top-0 left-0 w-full h-1/2 z-0">
    <svg viewBox="0 0 1440 320" class="w-full h-full" fill="none" xmlns="http://www.w3.org/2000/svg">
      <path fill="#f0f9ff" fill-opacity="0.8" d="M0,160L60,170.7C120,181,240,203,360,197.3C480,192,600,160,720,133.3C840,107,960,85,1080,101.3C1200,117,1320,171,1380,197.3L1440,224L1440,0L1380,0C1320,0,1200,0,1080,0C960,0,840,0,720,0C600,0,480,0,360,0C240,0,120,0,60,0L0,0Z"></path>
    </svg>
  </div>

  <div class="relative w-full max-w-7xl mx-auto px-4 sm:px-8 flex flex-col lg:flex-row items-center justify-between gap-8 z-10">
    <!-- ImÃ¡genes 3D Facebook e Instagram -->
    <div class="w-full max-w-md flex-shrink-0 mb-12 lg:mb-0 flex flex-col items-center">
      <div class="flex gap-4 items-center mb-2">
        <img src={fbImg} alt="Facebook 3D" class="w-32 h-32 rounded-2xl shadow-lg object-cover animate-float" loading="lazy" />
        <img src={igImg} alt="Instagram 3D" class="w-32 h-32 rounded-2xl shadow-lg object-cover animate-float" loading="lazy" />
      </div>
      <div class="flex gap-2 mt-8">
        <span class="inline-flex items-center px-3 py-1 rounded-full bg-white shadow text-xs font-semibold text-slate-700 border border-slate-200">
          <img src={deliverySvg} alt="Delivery" class="w-4 h-4 mr-2" />
          Instant delivery
        </span>
        <span class="inline-flex items-center px-3 py-1 rounded-full bg-white shadow text-xs font-semibold text-slate-700 border border-slate-200">
          <img src={supportSvg} alt="Support" class="w-4 h-4 mr-2" />
          Best Support
        </span>
        <span class="inline-flex items-center px-3 py-1 rounded-full bg-white shadow text-xs font-semibold text-slate-700 border border-slate-200">
          <img src={secureSvg} alt="Secure" class="w-4 h-4 mr-2" />
          100% Secure
        </span>
      </div>
    </div>
    <!-- Contenido -->
    <div class="flex-1 text-center lg:text-left">
      <h1 class="text-4xl sm:text-5xl lg:text-6xl font-extrabold mb-4 leading-tight text-slate-800">
        {heroContent.title}
      </h1>
      <p class="text-base sm:text-lg text-slate-600 max-w-lg mb-8 mx-auto lg:mx-0">
        {heroContent.subtitle}
      </p>
      <div class="flex flex-col sm:flex-row gap-4 justify-center lg:justify-start mb-8">
        {heroContent.buttonLink ? (
          <a href={heroContent.buttonLink} class="group relative inline-flex items-center px-8 py-4 rounded-2xl bg-gradient-to-r from-blue-500 to-cyan-500 text-white font-bold text-lg shadow-lg hover:shadow-xl transform hover:-translate-y-1 transition-all duration-300">
            <span class="relative z-10">{heroContent.buttonText}</span>
            <svg class="w-6 h-6 ml-2 relative z-10 transform group-hover:translate-x-1 transition-transform" fill="currentColor" viewBox="0 0 20 20">
              <path fill-rule="evenodd" d="M10.293 3.293a1 1 0 011.414 0l6 6a1 1 0 010 1.414l-6 6a1 1 0 01-1.414-1.414L14.586 11H3a1 1 0 110-2h11.586l-4.293-4.293a1 1 0 010-1.414z" clip-rule="evenodd" />
            </svg>
            <div class="absolute inset-0 bg-gradient-to-r from-blue-600 to-cyan-600 rounded-2xl opacity-0 group-hover:opacity-100 transition-opacity duration-300"></div>
          </a>
        ) : (
          <button class="group relative inline-flex items-center px-8 py-4 rounded-2xl bg-gradient-to-r from-blue-500 to-cyan-500 text-white font-bold text-lg shadow-lg hover:shadow-xl transform hover:-translate-y-1 transition-all duration-300">
            <span class="relative z-10">{heroContent.buttonText}</span>
            <svg class="w-6 h-6 ml-2 relative z-10 transform group-hover:translate-x-1 transition-transform" fill="currentColor" viewBox="0 0 20 20">
              <path fill-rule="evenodd" d="M10.293 3.293a1 1 0 011.414 0l6 6a1 1 0 010 1.414l-6 6a1 1 0 01-1.414-1.414L14.586 11H3a1 1 0 110-2h11.586l-4.293-4.293a1 1 0 010-1.414z" clip-rule="evenodd" />
            </svg>
            <div class="absolute inset-0 bg-gradient-to-r from-blue-600 to-cyan-600 rounded-2xl opacity-0 group-hover:opacity-100 transition-opacity duration-300"></div>
          </button>
        )}
      </div>
      <div class="flex flex-wrap gap-4 justify-center lg:justify-start">
        {heroContent.paymentInfo && (
          <span class="inline-flex items-center px-4 py-2 rounded-full bg-white text-slate-700 font-semibold text-sm shadow border border-slate-200">{heroContent.paymentInfo}</span>
        )}
        {heroContent.supportText && (
          <span class="inline-flex items-center px-4 py-2 rounded-full bg-white text-slate-700 font-semibold text-sm shadow border border-slate-200">{heroContent.supportText}</span>
        )}
      </div>
    </div>
  </div>
</section>

/* AnimaciÃ³n personalizada para movimiento alternado */
<style is:global>
@keyframes float {
  0%, 100% { transform: translateY(0); }
  50% { transform: translateY(-12px); }
}
@keyframes float-slow {
  0%, 100% { transform: translateY(0); }
  50% { transform: translateY(12px); }
}
.animate-float {
  animation: float 3.5s ease-in-out infinite;
}
.animate-float-slow {
  animation: float-slow 4.2s ease-in-out infinite;
}
</style> 